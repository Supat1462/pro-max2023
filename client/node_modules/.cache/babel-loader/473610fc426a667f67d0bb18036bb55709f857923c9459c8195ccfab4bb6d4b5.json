{"ast":null,"code":"import * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState(); // Avoid returning new route objects if we don't need to\n\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return {\n        ...route,\n        state: childState\n      };\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return {\n      ...state,\n      routes\n    };\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","_ref","getState","getStateListeners","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","_getStateListeners$ro","childState","call","useEffect"],"sources":["C:\\Users\\supat\\node_modules\\@react-navigation\\core\\lib\\module\\useOnGetState.tsx"],"sourcesContent":["import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,wBAAP,MAEO,4BAFP;AAGA,OAAOC,sBAAP,MAAmC,0BAAnC;AAOA,eAAe,SAASC,aAATA,CAAAC,IAAA,EAGH;EAAA,IAH0B;IACpCC,QADoC;IAEpCC;EAFoC,CAG1B,GAAAF,IAAA;EACV,MAAM;IAAEG;EAAF,IAAuBR,KAAK,CAACS,UAAN,CAAiBP,wBAAjB,CAA7B;EACA,MAAMQ,KAAK,GAAGV,KAAK,CAACS,UAAN,CAAiBN,sBAAjB,CAAd;EACA,MAAMQ,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAT,GAAe,MAAhC;EAEA,MAAMC,kBAAkB,GAAGZ,KAAK,CAACa,WAAN,CAAkB,MAAM;IACjD,MAAMC,KAAK,GAAGR,QAAQ,EAAtB,CADiD,CAGjD;;IACA,MAAMS,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBN,KAAD,IAAW;MAAA,IAAAO,qBAAA;MACzC,MAAMC,UAAU,IAAAD,qBAAA,GAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAP,CAApB,cAAAM,qBAAA,uBAAGA,qBAAA,CAAAE,IAAA,CAAAZ,iBAAiB,CAApC;MAEA,IAAIG,KAAK,CAACI,KAAN,KAAgBI,UAApB,EAAgC;QAC9B,OAAOR,KAAP;MACD;MAED,OAAO;QAAE,GAAGA,KAAL;QAAYI,KAAK,EAAEI;MAAnB,CAAP;IACD,CARc,CAAf;IAUA,IAAIjB,YAAY,CAACa,KAAK,CAACC,MAAP,EAAeA,MAAf,CAAhB,EAAwC;MACtC,OAAOD,KAAP;IACD;IAED,OAAO;MAAE,GAAGA,KAAL;MAAYC;IAAZ,CAAP;EACD,CAnB0B,EAmBxB,CAACT,QAAD,EAAWC,iBAAX,CAnBwB,CAA3B;EAqBAP,KAAK,CAACoB,SAAN,CAAgB,MAAM;IACpB,OAAOZ,gBAAP,aAAOA,gBAAP,uBAAOA,gBAAgB,CAAG,UAAH,EAAeG,GAAf,EAAoBC,kBAApB,CAAvB;EACD,CAFD,EAEG,CAACJ,gBAAD,EAAmBI,kBAAnB,EAAuCD,GAAvC,CAFH;AAGD"},"metadata":{},"sourceType":"module","externalDependencies":[]}