{"ast":null,"code":"import * as React from 'react';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(ref) {\n  let {\n    enabled = true,\n    formatter = (options, route) => {\n      var _options$title;\n      return (_options$title = options === null || options === void 0 ? void 0 : options.title) !== null && _options$title !== void 0 ? _options$title : route === null || route === void 0 ? void 0 : route.name;\n    }\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const navigation = ref.current;\n    if (navigation) {\n      const title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', e => {\n      const title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"names":["React","useDocumentTitle","ref","enabled","formatter","options","route","_options$title","title","name","arguments","length","undefined","useEffect","navigation","current","getCurrentOptions","getCurrentRoute","document","addListener","e","data"],"sources":["C:\\Users\\supat\\node_modules\\@react-navigation\\native\\lib\\module\\useDocumentTitle.tsx"],"sourcesContent":["import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n"],"mappings":"AAIA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAIA;AACA;AACA;AACA,eAAe,SAASC,gBAATA,CACbC,GADa,EAMb;EAAA,IAJA;IACEC,OAAO,GAAG,IADZ;IAEEC,SAAS,GAAGA,CAACC,OAAD,EAAUC,KAAV;MAAA,IAAAC,cAAA;MAAA,QAAAA,cAAA,GAAoBF,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEG,KAA7B,cAAAD,cAAA,cAAAA,cAAA,GAAsCD,KAAtC,aAAsCA,KAAtC,uBAAsCA,KAAK,CAAEG,IAA7C;IAAA;EAFd,CAIA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD0B,EAC1B;EACAV,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpB,IAAI,CAACV,OAAL,EAAc;MACZ;IACD;IAED,MAAMW,UAAU,GAAGZ,GAAG,CAACa,OAAvB;IAEA,IAAID,UAAJ,EAAgB;MACd,MAAMN,KAAK,GAAGJ,SAAS,CACrBU,UAAU,CAACE,iBAAX,EADqB,EAErBF,UAAU,CAACG,eAAX,EAFqB,CAAvB;MAKAC,QAAQ,CAACV,KAAT,GAAiBA,KAAjB;IACD;IAED,OAAOM,UAAP,aAAOA,UAAP,uBAAOA,UAAU,CAAEK,WAAZ,CAAwB,SAAxB,EAAoCC,CAAD,IAAO;MAC/C,MAAMZ,KAAK,GAAGJ,SAAS,CAACgB,CAAC,CAACC,IAAF,CAAOhB,OAAR,EAAiBS,UAAjB,aAAiBA,UAAjB,uBAAiBA,UAAU,CAAEG,eAAZ,EAAjB,CAAvB;MAEAC,QAAQ,CAACV,KAAT,GAAiBA,KAAjB;IACD,CAJM,CAAP;EAKD,CArBD;AAsBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}